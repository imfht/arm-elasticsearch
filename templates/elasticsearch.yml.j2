# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:

cluster.name: elasticsearch

#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:

node.name: es_{{ ansible_hostname }}

{% if groups['odroid'][0] %}
node.master: true
node.data: true
{% else %}
node.master: false
node.data: true
{% endif %}

# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):

path.data: {{ elasticsearch.data_path }}

# Path to log files:

# path.logs: {{ elasticsearch.logs_path }}

# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:

# bootstrap.memory_lock: true

# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):

{% if groups['odroid'][0] %}
network.bind_host: _eth0_
network.publish_host: _eth0_
{% else %}
network.host: _eth0_
{% endif %}

# Set a custom port for HTTP:
#
# http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#

# discovery.zen.ping.multicast.enabled: false

# discovery.zen.ping.unicast.hosts: ["{% for host in play_hosts if hostvars[host]['ansible_hostname'] != ansible_hostname %}es_{{ hostvars[host]['ansible_hostname'] }}{% if not loop.last %}", "{% endif %}{% endfor %}"]
discovery.zen.ping.unicast.hosts: ["{% for host in play_hosts %}es_{{ hostvars[host]['ansible_hostname'] }}{% if not loop.last %}", "{% endif %}{% endfor %}"]

# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):

# discovery.zen.minimum_master_nodes: {{ groups.odroid | length / 2 + 1 }}
# discovery.zen.minimum_master_nodes: {{ groups.odroid | length }}
discovery.zen.minimum_master_nodes: 1

# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

bootstrap.system_call_filter: false
xpack.ml.enabled: false
